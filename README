The goal of django-requires_js_css is to provide a way for individual templates to include their own JavaScript and CSS files, while at the same time adhering to site performance best practices.

For example, if you have a 'cool button' widget requested via a templatetag and defined by 'cool_button.html', you can specify 'cool_button.css' in the 'cool_button.html' file itself, and the css file will actually be loaded in the "HEAD" where it belongs (this is customizable though).

What this does *not* do is attempt to compress your JS/CSS or fix static directories on its own.  The hope is that requires_js_css will live side-by-side with the various compression apps, although with the current implementation, requires_js_css has to know about and explicitly call into each individual one.  Not sure yet how to fix this.

There is still a ton left to do here, and I plan on continuing work on it in the upcoming months.
- Document, document, document.
- Add test cases
- Allow named JS/CSS 'blocks' and not just files
- Change parameters to be 'resolvable'
- Allow more customization of 'groups'
- Support more than just django-css for compression/compiling
- Support CSS media attribute

Ideas, criticisms and offers of help are all greatly appreciated :)